---
import type {ContentItem} from "@agility/content-fetch"
import type {AgilityComponentProps} from "../../lib/agility-cms/types/agility-component-props"
import type {ImageField, URLField} from "../../lib/agility-cms/types/agility-fields"
import AgilityPic from "../AgilityPic.astro"

interface ITextBlockWithImage {
	title: string
	content: string
	tagline?: string
	imagePosition: "left" | "right"
	image: ImageField
	primaryButton: URLField
	highPriority?: string
}

interface Props extends AgilityComponentProps {}

const {item} = Astro.props

const {contentID, fields} = item as ContentItem<ITextBlockWithImage>

//determine if the image should be high priority
const priority = fields.highPriority === "true"

const isUrlAbsolute = (url: string) => url.indexOf("://") > 0 || url.indexOf("//") === 0
---

<div class="relative px-8" data-agility-component={contentID}>
	<div class="flex flex-col md:flex-row justify-between max-w-screen-xl mx-auto py-20 md:py-24 items-center">
		<div class="md:w-6/12 flex-shrink-0 relative" data-agility-field="image">
			{
				fields.primaryButton ? (
					<a href={fields.primaryButton.href} class="relative">
						<AgilityPic
							image={fields.image}
							className="rounded-lg object-cover object-center"
							priority={priority}
							fallbackWidth={600}
							sources={[
								//screen at least than 640, it's 1/2 of the screen, so the same size as the prev breakpoint
								{media: "(min-width: 1280px)", width: 800},
								{media: "(min-width: 640px)", width: 640},
								//screen less than 640, full width of screen
								{media: "(max-width: 639px)", width: 640},
							]}
						/>
					</a>
				) : (
					<AgilityPic
						image={fields.image}
						className="rounded-lg object-cover object-center"
						priority={priority}
						fallbackWidth={600}
						sources={[
							//screen at least than 640, it's 1/2 of the screen, so the same size as the prev breakpoint
							{media: "(min-width: 1280px)", width: 800},
							{media: "(min-width: 640px)", width: 640},
							//screen less than 640, full width of screen
							{media: "(max-width: 639px)", width: 640},
						]}
					/>
				)
			}
		</div>
		<div
			class={`md:w-6/12 mt-16 md:mt-0 ${
				fields.imagePosition != "right" ? `md:ml-12 lg:ml-16 md:order-last` : `md:mr-12 lg:mr-16 md:order-first`
			}`}
		>
			<div class="g:py-8 text-center md:text-left">
				{
					fields.tagline && (
						<div
							data-agility-field="tagline"
							class="font-bold text-primary-500 text-sm text-center md:text-left uppercase py-1"
						>
							{fields.tagline}
						</div>
					)
				}
				<h2
					data-agility-field="title"
					class="font-display text-4xl font-black text-secondary-500 md:text-3xl lg:text-5xl tracking-wide text-center mt-4 lg:leading-tight md:text-left"
				>
					{fields.title}
				</h2>
				<p
					data-agility-field="content"
					class="mt-4 text-center md:text-left text-sm md:text-base lg:text-lg font-medium leading-relaxed text-secondary-200"
				>
					{fields.content}
				</p>
				{
					fields.primaryButton && (
						<a
							data-agility-field="primaryButton"
							href={fields.primaryButton.href}
							title={fields.primaryButton.text}
							target={fields.primaryButton.target}
							class="inline-block mt-8 md:mt-8 px-8 py-3 border border-transparent text-base leading-6 font-medium rounded-md text-white bg-primary-500 hover:bg-primary-700 focus:outline-none focus:border-primary-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150"
						>
							{fields.primaryButton.text}
						</a>
					)
				}
			</div>
		</div>
	</div>
</div>
